#include "cpu_tests.h"

using namespace std;

namespace unit_tests
{
	TEST_F(CPUTest, BCCTrivial)
	{
		u8 program[6] = { 0x90, 0x02, 0xa2, 0x33, 0xa9, 0x42 };
		Program(program, 6);
		CheckNotAffectedP(0xff);
		TestA(0x42);
	}

	TEST_F(CPUTest, BCSTrivial)
	{
		u8 program[9] = { 0xa9, 0xff, 0x0a, 0xb0, 0x02, 0xa2, 0x33, 0xa9, 0x42 };
		Program(program, 9);
		// CheckNotAffectedP(0xff);
		TestA(0x42);
	}

	TEST_F(CPUTest, BEQTrivial)
	{
		u8 program[8] = { 0xa9, 0x00, 0xf0, 0x02, 0x00, 0x00, 0xa9, 0x42 };
		Program(program, 8);
		TestA(0x42);
	}

	TEST_F(CPUTest, BEQNoJump)
	{
		u8 program[8] = { 0xa9, 0x01, 0xf0, 0x02, 0x00, 0x00, 0xa9, 0x42 };
		Program(program, 8);
		TestA(0x1);
	}

	TEST_F(CPUTest, BMITrivial)
	{
		u8 program[8] = { 0xa9, 0xff, 0x30, 0x02, 0x00, 0x00, 0xa9, 0x42 };
		Program(program, 8);
		TestA(0x42);
	}

	TEST_F(CPUTest, BNETrivial)
	{
		u8 program[8] = { 0xa9, 0x1f, 0xd0, 0x02, 0x00, 0x00, 0xa9, 0x42 };
		Program(program, 8);
		TestA(0x42);
	}

	TEST_F(CPUTest, BPLTrivial)
	{
		u8 program[8] = { 0xa9, 0x1f, 0x10, 0x02, 0x00, 0x00, 0xa9, 0x42 };
		Program(program, 8);
		TestA(0x42);
	}

	TEST_F(CPUTest, BVSTrivial)
	{
		u8 program[8] = { 0x69, 0x42, 0x70, 0x02, 0x00, 0x00, 0xa9, 0x42 };
		SetA(0x42);
		Program(program, 8);
		TestOverflowSet();
		TestA(0x42);
	}

	TEST_F(CPUTest, BVCTrivial)
	{
		u8 program[8] = { 0xa9, 0x1f, 0x50, 0x02, 0x00, 0x00, 0xa9, 0x42 };
		Program(program, 8);
		TestA(0x42);
	}
}